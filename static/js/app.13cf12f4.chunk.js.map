{"version":3,"sources":["assets/upload_placeholder.png","src/constants/theme.ts","src/core-ui/Dropzone.tsx","src/core-ui/Button.tsx","src/scenes/HomeScene.tsx","src/App.tsx","web-build/register-service-worker.js"],"names":["module","exports","BLUE","theme","colors","text","primary","default","link","error","light","button","secondary","disabled","border","misc","background","shadow","loadingIndicator","fonts","sizes","medium","small","xLarge","header","Dropzone","props","note","source","bottomNote","getPreview","loading","containerStyle","fileOrientation","withBorder","maxFileSize","type","imageSize","height","width","dropzoneProps","useState","isSizeBigger","setIsSizeBigger","setErrorMessage","View","accept","multiple","preventDropOnDocument","onDrop","acceptedFiles","files","map","file","preview","URL","createObjectURL","maxSize","content","uri","getRootProps","getInputProps","newSource","undefined","ActivityIndicator","Image","getSize","style","styles","resizeMode","uploadPlaceholder","Text","browse","blueText","marginBottom","borderColor","StyleSheet","flatten","root","marginTop","color","withoutBorder","create","alignItems","cursor","display","flexDirection","justifyContent","borderRadius","borderStyle","borderWidth","fontSize","fontWeight","fontFamily","textDecorationLine","Button","title","mode","otherProps","buttonModeStyle","backgroundColor","TouchableOpacity","container","textBtn","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","padding","HomeScene","setSource","isLoading","setIsLoading","navigation","setNavigation","response","setResponse","navigateToUpload","useCallback","useEffect","loadingContainer","size","loadingText","contentWrapper","leftContainer","urlOutputs","rightContainer","fileName","numberOfLines","ellipsizeMode","name","uploadBtn","onPress","a","async","data","FormData","append","fetch","method","headers","Accept","body","json","result","Error","resultBtn","flex","textAlign","paddingLeft","App","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","console"],"mappings":"wEAAAA,EAAOC,QAAU,IAA0B,gD,uMCArCC,EAAO,UAYPC,EAAQ,CACZC,OAAQ,CACNC,KAAM,CACJC,QAASJ,EACTK,QARc,UASdC,KAAMN,EACNO,MARM,UASNC,MAVQ,WAYVC,OAAQ,CACNL,QAASJ,EACTU,UAtBa,UAuBbC,SAnBa,WAqBfC,OAAQ,CAAER,QAASJ,EAAMO,MAhBjB,WAiBRM,KAAM,CACJC,WAnBQ,UAoBRC,OAtBQ,UAuBRC,iBAAkBhB,IAGtBiB,MAAO,CACLC,MAAO,CACLb,QAAS,GACTc,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,OAAQ,MAKNpB,EAAkBD,EAAlBC,OAAQe,EAAUhB,EAAVgB,M,iBCTD,SAASM,EAASC,GAAe,IAE5CC,EAeED,EAfFC,KACAC,EAcEF,EAdFE,OACAC,EAaEH,EAbFG,WACAC,EAYEJ,EAZFI,WACAC,EAWEL,EAXFK,QAEAC,GASEN,EAVFO,gBAUEP,EATFM,gBAR2C,EAiBzCN,EARFQ,kBAT2C,WAiBzCR,EAPFS,mBAV2C,MAU7B,IAV6B,IAiBzCT,EANFU,YAX2C,MAWpC,QAXoC,IAiBzCV,EALFW,iBAZ2C,MAY/B,CACVC,OAAQ,KACRC,MAAO,MAdkC,EAgBxCC,EAhBwC,IAiBzCd,EAjByC,0IAkBPe,oBAAkB,GAlBX,WAkBxCC,EAlBwC,KAkB1BC,EAlB0B,OAoBPF,mBAAiB,IApBV,WAoB1BG,GApB0B,WAyC7C,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACEC,OAAQ,UACRC,UAAU,EACVC,uBAAqB,EACrBC,OAAQ,SAACC,GACP,IAAIC,EAAQD,EAAcE,KAAI,SAACC,GAAD,MAAW,CACvCA,OACAC,QAASC,IAAIC,gBAAgBH,OAE/BvB,GAAcA,EAAWqB,EAAM,MAE7BX,EAXN,CAYEiB,QAAStB,KAER,YAAsC,IAMjCuB,EAzCQC,EAmCVC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACZC,EAAclC,EACI,kBAAXA,EACL,CAAE+B,IAAK/B,GACP,CAAE+B,IAAM/B,GAAUA,EAAO0B,cAAYS,QACvCA,EAkCJ,OAhCIhC,EACF2B,EAAU,kBAACM,EAAA,EAAD,MACQ,UAAT5B,GAAoB0B,GA5CnBH,EA6CGG,EAAUH,KAAO,GA5CtCM,IAAMC,QACJP,GACA,SAACpB,EAAOD,GACM,KAARqB,IAGApB,EAAQF,EAAUE,OAASD,EAASD,EAAUC,OAChDK,GAAgB,GAEhBA,GAAgB,OAGpB,SAAClC,GACCmC,EAAgBnC,MAgCZiD,EACE,kBAACO,EAAA,EAAD,CACErC,OAAQ,CAAE+B,IAAKG,EAAUH,KACzBQ,MAAO,CACLC,EAAOd,QACP,CACEhB,OAAQ,IACRC,MAAO,MAGX8B,WAAW,aAIfX,EACE,oCACE,kBAACO,EAAA,EAAD,CACErC,OAAQ0C,IACRH,MAAO,CAACC,EAAOd,QAAS,CAAEhB,OAAQ,IAAKC,MAAO,MAC9C8B,WAAW,YAEb,kBAACE,EAAA,EAAD,CAAMJ,MAAOC,EAAO/D,MAApB,oBACmB,kBAACkE,EAAA,EAAD,CAAMJ,MAAOC,EAAOI,QAApB,UAA0C,IAD7D,qBAOCtC,EACL,oCACGP,GACC,kBAAC4C,EAAA,EAAD,CACEJ,MAAO,CACLC,EAAOK,SACP,CAAEC,aAAc,IAChBhC,EAAe,CAAEiC,YAAavE,EAAOU,OAAOL,OAAU,KAGvDkB,GAGL,wBACMiC,EAAa,CACfO,MAAOS,IAAWC,QAAQ,CACxBT,EAAOU,KACP9C,EACAU,EACI,CAAEiC,YAAavE,EAAOU,OAAOL,OAC7B,CAAEkE,YAAavE,EAAOU,OAAOR,aAIrC,0BAAWuD,KACVH,GAEF7B,GACC,kBAAC0C,EAAA,EAAD,CACEJ,MAAO,CACLC,EAAOK,SACP,CAAEM,UAAW,IACbrC,EAAe,CAAEsC,MAAO5E,EAAOC,KAAKI,OAAU,KAG/CoB,IAKP,oCACE,wBACM+B,EAAa,CACfO,MAAOS,IAAWC,QAAQ,CACxBT,EAAOa,cACPjD,MAIJ,0BAAW6B,KACX,kBAACI,EAAA,EAAD,CACErC,OAAQ0C,IACRH,MAAO,CAACC,EAAOd,QAAS,CAAEhB,OAAQ,IAAKC,MAAO,MAC9C8B,WAAW,YAEb,kBAACE,EAAA,EAAD,CAAMJ,MAAOC,EAAOK,UAApB,qBAUhB,IAAML,EAASQ,IAAWM,OAAO,CAC/BD,cAAe,CACbE,WAAY,SACZC,OAAQ,UACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,UAElBT,KAAM,CACJK,WAAY,SACZK,aAAc,EACdC,YAAa,QACbC,YAAa,EACbN,OAAQ,UACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,UAElBjC,QAAS,CACPkC,aAAc,GAEhBf,SAAU,CACRO,MAAO5E,EAAOC,KAAKG,KACnBmF,SAAUxE,EAAMC,MAAME,MACtBsE,WAAY,OAEdvF,KAAM,CACJwF,WAAY,aACZb,MAAO5E,EAAOC,KAAKE,QACnBqF,WAAY,OAEdpB,OAAQ,CAAEQ,MAAO5E,EAAOC,KAAKG,KAAMsF,mBAAoB,e,QCpN1C,SAASC,EAAOrE,GAAe,IACtCsE,EAA4DtE,EAA5DsE,MADqC,EACuBtE,EAArDuE,YAD8B,MACvB,UADuB,EACZ9B,EAAmCzC,EAAnCyC,MAAOtD,EAA4Ba,EAA5Bb,SAAaqF,EADR,IACuBxE,EADvB,qCAGvCyE,EAAkB,CACpBC,gBAAiBvF,EACbT,EAAOO,OAAOE,SACL,YAAToF,EACA7F,EAAOO,OAAOL,QACdF,EAAOO,OAAOC,WAEpB,OACE,kBAACyF,EAAA,EAAD,KACExF,SAAUA,EACVsD,MAAO,CAACC,EAAOkC,UAAWH,EAAiBhC,IACvC+B,GAEJ,kBAAC3B,EAAA,EAAD,CAAMJ,MAAOC,EAAOmC,SAAUP,IAKpC,IAAM5B,EAASQ,IAAWM,OAAO,CAC/BoB,UAAW,CACTnB,WAAY,SACZI,eAAgB,SAChBiB,YAAapG,EAAOW,KAAKE,OACzBwF,aAAc,CACZlE,MAAO,EACPD,OAAQ,GAEVoE,cAAe,IACfC,aAAc,KACdC,UAAW,EACXC,QAAS,GACTrB,aAAc,GAEhBe,QAAS,CACPvB,MAAO5E,EAAOC,KAAKK,MACnBmF,WAAY,aACZD,WAAY,SCzCD,SAASkB,IAAa,IAAD,EACRrE,mBAAiC,MADzB,WAC7Bb,EAD6B,KACrBmF,EADqB,OAEFtE,oBAAS,GAFP,WAE7BuE,EAF6B,KAElBC,EAFkB,OAGAxE,mBAAqB,UAHrB,WAG7ByE,EAH6B,KAGjBC,EAHiB,OAIJ1E,mBAAgC,MAJ5B,WAI7B2E,EAJ6B,KAInBC,EAJmB,KA4B9BC,EAAmBC,uBAAY,kBAAMJ,EAAc,YAAW,IASlE,OAPAK,qBAAU,WACW,WAAfN,IACFG,EAAY,MACZN,EAAU,SAEX,CAACG,IAEAF,EAEA,kBAACnE,EAAA,EAAD,CAAMsB,MAAOC,EAAOqD,kBAClB,kBAACzD,EAAA,EAAD,CAAmBgB,MAAO5E,EAAOW,KAAKG,iBAAkBwG,KAAK,UAC7D,kBAACnD,EAAA,EAAD,CAAMJ,MAAO,CAACC,EAAO/D,KAAM+D,EAAOuD,cAAlC,wBAQJ,kBAAC9E,EAAA,EAAD,CAAMsB,MAAOC,EAAOkC,WAClB,kBAAC/B,EAAA,EAAD,CAAMJ,MAAOC,EAAO5C,QACF,WAAf0F,EAA0B,eAAiB,sBAE9C,kBAACrE,EAAA,EAAD,CAAMsB,MAAOC,EAAOwD,gBAClB,kBAAC/E,EAAA,EAAD,CAAMsB,MAAOC,EAAOyD,eACF,WAAfX,EACC,kBAACzF,EAAD,CACEI,WAAW,8CACXO,KAAK,QACLJ,eAAgB,CAAEO,MAAO,OAAQD,OAAQ,KACzCV,OAAQA,EACRE,WAAYiF,IAGd,kBAAC9C,EAAA,EAAD,CACErC,OAAQ,CAAE+B,IAAG,MAAEyD,OAAF,EAAEA,EAAUU,YACzB3D,MAAO,CACL5B,MAAO,OACPD,OAAQ,IACRoD,YAAa,EACbf,YAAavE,EAAOU,OAAOR,YAKnC,kBAACuC,EAAA,EAAD,CAAMsB,MAAOC,EAAO2D,gBAClB,kBAACxD,EAAA,EAAD,CACEJ,MAAO,CAACC,EAAO/D,KAAM+D,EAAO4D,UAC5BC,cAAe,EACfC,cAAc,WAEP,MAANtG,OAAA,EAAAA,EAAQyB,KAAK8E,OAAQ,sBAER,WAAfjB,EACC,kBAACnB,EAAD,CACEE,KAAK,YACLD,MAAM,SACN7B,MAAOC,EAAOgE,UACdC,QAlFG,8BAAAC,EAAAC,OAAA,iEAEPC,EAAO,IAAIC,UACVC,OAAO,QAAc,MAAN9G,OAAA,EAAAA,EAAQyB,OAAQ,IACpC4D,GAAa,GAJF,WAAAqB,EAAA,MAKUK,MAAM,+BAAgC,CACzDC,OAAQ,OACRC,QAAS,CACPC,OAAQ,oBAEVC,KAAMP,KAVG,cAKPpB,EALO,kBAAAkB,EAAA,MAaQlB,EAAS4B,QAbjB,OAaPC,EAbO,OAcXhC,GAAa,GACbI,EAAY4B,GACZ9B,EAAc,UAhBH,wDAkBL,IAAI+B,MAAJ,MAlBK,kEAmFHrI,UAAWe,IAGb,kBAACmE,EAAD,CACEC,MAAM,2BACN7B,MAAOC,EAAO+E,UACdd,QAASf,OASvB,IAAMlD,EAASQ,IAAWM,OAAO,CAC/BoB,UAAW,CACT8C,KAAM,EACNhD,gBAAiBhG,EAAOW,KAAKC,WAC7BuE,eAAgB,SAChBsB,QAAS,IAEXrF,OAAQ,CACN6H,UAAW,SACXxD,WAAY,kBACZb,MAAO5E,EAAOC,KAAKC,QACnBqF,SAAUxE,EAAMC,MAAMI,OACtBkD,aAAc,IAEhBkD,eAAgB,CACdtC,cAAe,OAEjBuC,cAAe,CACbuB,KAAM,GAERrB,eAAgB,CACdxC,eAAgB,SAChB+D,YAAa,GACbF,KAAM,GAER/I,KAAM,CACJwF,WAAY,aACZD,WAAY,OAEdoC,SAAU,CACRtD,aAAc,GACdiB,SAAUxE,EAAMC,MAAMC,QAExB+G,UAAW,CACT7F,MAAO,OAET4G,UAAW,CACT7G,OAAQ,IAEVmF,iBAAkB,CAAElC,eAAgB,SAAUJ,WAAY,SAAUiE,KAAM,GAC1EzB,YAAa,CACX0B,UAAW,SACXrE,MAAO5E,EAAOC,KAAKC,QACnBqF,SAAUxE,EAAMC,MAAMG,OACtBwD,UAAW,MC7JA,SAASwE,IACtB,OAAO,kBAACzC,EAAD,Q,4DCHL,kBAAmB0C,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,gCAAiC,CAAEC,MAAO,YACnDC,MAAK,SAAUC,OAGfC,OAAM,SAAUvJ,GACfwJ,QAAQF,KAAK,oCAAqCtJ,W","file":"static/js/app.13cf12f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/upload_placeholder.35cb9586.png\";","const BLUE = '#57ABD2';\nconst LIGHT_BLUE = '#8CC6E0';\nconst LIGHTER_BLUE = '#b8dcec';\nconst DARK_GRAY = '#0d0d0d';\nconst GRAY = '#7F7F7F';\nconst LIGHT_GRAY = '#97999B';\nconst PALE_GRAY = '#F2F2F2';\nconst BLACK = '#000000';\nconst LIGHT_BLACK = '#0C0C0C';\nconst WHITE = '#FFFFFF';\nconst RED = '#FF0D0D';\n\nconst theme = {\n  colors: {\n    text: {\n      primary: BLUE,\n      default: LIGHT_BLACK,\n      link: BLUE,\n      error: RED,\n      light: WHITE,\n    },\n    button: {\n      primary: BLUE,\n      secondary: LIGHT_BLUE,\n      disabled: LIGHT_GRAY,\n    },\n    border: { primary: BLUE, error: RED },\n    misc: {\n      background: WHITE,\n      shadow: BLACK,\n      loadingIndicator: BLUE,\n    },\n  },\n  fonts: {\n    sizes: {\n      default: 12,\n      medium: 16,\n      small: 10,\n      xLarge: 20,\n      header: 32,\n    },\n  },\n};\n\nconst { colors, fonts } = theme;\n\nexport { theme, colors, fonts };\n","import React, { CSSProperties, useState } from 'react';\nimport ReactDropzone, { DropzoneProps } from 'react-dropzone';\nimport {\n  StyleSheet,\n  Image,\n  View,\n  StyleProp,\n  ImageStyle,\n  Text,\n  ActivityIndicator,\n} from 'react-native';\n\nimport { colors, fonts } from '../constants/theme';\nimport { uploadPlaceholder } from '../../assets';\n\nexport type FileWithPreview = { file: File; preview: string };\n\ntype Props = DropzoneProps & {\n  note?: string;\n  type?: 'image';\n  source?: FileWithPreview | string | null;\n  getPreview?: (withPreview: FileWithPreview) => void;\n  loading?: boolean;\n  containerStyle?: StyleProp<ImageStyle>;\n  imageSize?: {\n    height: number;\n    width: number;\n  };\n  maxFileSize?: number;\n  bottomNote?: string;\n  topNote?: string;\n  withBorder?: boolean;\n  fileOrientation?: 'landscape' | 'potrait';\n};\n\nexport default function Dropzone(props: Props) {\n  let {\n    note,\n    source,\n    bottomNote,\n    getPreview,\n    loading,\n    fileOrientation = 'potrait',\n    containerStyle,\n    withBorder = true,\n    maxFileSize = 10000000,\n    type = 'image',\n    imageSize = {\n      height: 4032,\n      width: 4032,\n    },\n    ...dropzoneProps\n  } = props;\n  let [isSizeBigger, setIsSizeBigger] = useState<boolean>(false);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let [errorMessage, setErrorMessage] = useState<string>('');\n\n  let getImageSize = (uri: string) => {\n    Image.getSize(\n      uri,\n      (width, height) => {\n        if (uri === '') {\n          return;\n        }\n        if (width > imageSize.width || height > imageSize.height) {\n          setIsSizeBigger(true);\n        } else {\n          setIsSizeBigger(false);\n        }\n      },\n      (error) => {\n        setErrorMessage(error);\n      },\n    );\n  };\n\n  return (\n    <View>\n      <ReactDropzone\n        accept={'image/*'}\n        multiple={false}\n        preventDropOnDocument\n        onDrop={(acceptedFiles: Array<File>) => {\n          let files = acceptedFiles.map((file) => ({\n            file,\n            preview: URL.createObjectURL(file),\n          }));\n          getPreview && getPreview(files[0]);\n        }}\n        {...dropzoneProps}\n        maxSize={maxFileSize}\n      >\n        {({ getRootProps, getInputProps }) => {\n          let newSource = !!source\n            ? typeof source === 'string'\n              ? { uri: source }\n              : { uri: (source && source.preview) || undefined }\n            : undefined;\n          let content;\n          if (loading) {\n            content = <ActivityIndicator />;\n          } else if (type === 'image' && newSource) {\n            getImageSize(newSource.uri || '');\n            content = (\n              <Image\n                source={{ uri: newSource.uri }}\n                style={[\n                  styles.preview,\n                  {\n                    height: 400,\n                    width: 600,\n                  },\n                ]}\n                resizeMode=\"contain\"\n              />\n            );\n          } else {\n            content = (\n              <>\n                <Image\n                  source={uploadPlaceholder}\n                  style={[styles.preview, { height: 100, width: 100 }]}\n                  resizeMode=\"contain\"\n                />\n                <Text style={styles.text}>\n                  Drag and Drop or <Text style={styles.browse}>browse</Text>{' '}\n                  files to upload.\n                </Text>\n              </>\n            );\n          }\n          return withBorder ? (\n            <>\n              {note && (\n                <Text\n                  style={[\n                    styles.blueText,\n                    { marginBottom: 12 },\n                    isSizeBigger ? { borderColor: colors.border.error } : {},\n                  ]}\n                >\n                  {note}\n                </Text>\n              )}\n              <div\n                {...getRootProps({\n                  style: StyleSheet.flatten([\n                    styles.root,\n                    containerStyle,\n                    isSizeBigger\n                      ? { borderColor: colors.border.error }\n                      : { borderColor: colors.border.primary },\n                  ]) as CSSProperties,\n                })}\n              >\n                <input {...getInputProps()} />\n                {content}\n              </div>\n              {bottomNote && (\n                <Text\n                  style={[\n                    styles.blueText,\n                    { marginTop: 12 },\n                    isSizeBigger ? { color: colors.text.error } : {},\n                  ]}\n                >\n                  {bottomNote}\n                </Text>\n              )}\n            </>\n          ) : (\n            <>\n              <div\n                {...getRootProps({\n                  style: StyleSheet.flatten([\n                    styles.withoutBorder,\n                    containerStyle,\n                  ]) as CSSProperties,\n                })}\n              >\n                <input {...getInputProps()} />\n                <Image\n                  source={uploadPlaceholder}\n                  style={[styles.preview, { height: 100, width: 100 }]}\n                  resizeMode=\"contain\"\n                />\n                <Text style={styles.blueText}>Upload File</Text>\n              </div>\n            </>\n          );\n        }}\n      </ReactDropzone>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  withoutBorder: {\n    alignItems: 'center',\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  root: {\n    alignItems: 'center',\n    borderRadius: 4,\n    borderStyle: 'solid',\n    borderWidth: 2,\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  preview: {\n    borderRadius: 4,\n  },\n  blueText: {\n    color: colors.text.link,\n    fontSize: fonts.sizes.small,\n    fontWeight: '700',\n  },\n  text: {\n    fontFamily: 'Montserrat',\n    color: colors.text.default,\n    fontWeight: '600',\n  },\n  browse: { color: colors.text.link, textDecorationLine: 'underline' },\n});\n","import React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  StyleSheet,\n  Text,\n} from 'react-native';\n\nimport { colors } from '../constants/theme';\n\ntype Props = TouchableOpacityProps & {\n  title?: string;\n  mode?: 'primary' | 'secondary';\n};\n\nexport default function Button(props: Props) {\n  let { title, mode = 'primary', style, disabled, ...otherProps } = props;\n\n  let buttonModeStyle = {\n    backgroundColor: disabled\n      ? colors.button.disabled\n      : mode === 'primary'\n      ? colors.button.primary\n      : colors.button.secondary,\n  };\n  return (\n    <TouchableOpacity\n      disabled={disabled}\n      style={[styles.container, buttonModeStyle, style]}\n      {...otherProps}\n    >\n      <Text style={styles.textBtn}>{title}</Text>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: colors.misc.shadow,\n    shadowOffset: {\n      width: 0,\n      height: 3,\n    },\n    shadowOpacity: 0.27,\n    shadowRadius: 4.65,\n    elevation: 6,\n    padding: 10,\n    borderRadius: 5,\n  },\n  textBtn: {\n    color: colors.text.light,\n    fontFamily: 'Montserrat',\n    fontWeight: '700',\n  },\n});\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { View, Text, StyleSheet, ActivityIndicator, Image } from 'react-native';\n\nimport Dropzone, { FileWithPreview } from '../core-ui/Dropzone';\nimport { colors, fonts } from '../constants/theme';\nimport { Button } from '../core-ui';\n\ntype Navigation = 'Upload' | 'Result';\ntype UploadResponse = {\n  urlInputs: '';\n  urlOutputs: '';\n};\n\nexport default function HomeScene() {\n  let [source, setSource] = useState<FileWithPreview | null>(null);\n  let [isLoading, setIsLoading] = useState(false);\n  let [navigation, setNavigation] = useState<Navigation>('Upload');\n  let [response, setResponse] = useState<UploadResponse | null>(null);\n\n  let onSubmit = async () => {\n    try {\n      let data = new FormData();\n      data.append('file', source?.file || '');\n      setIsLoading(true);\n      let response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n        },\n        body: data,\n      });\n\n      let result = await response.json();\n      setIsLoading(false);\n      setResponse(result);\n      setNavigation('Result');\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n\n  let navigateToUpload = useCallback(() => setNavigation('Upload'), []);\n\n  useEffect(() => {\n    if (navigation === 'Upload') {\n      setResponse(null);\n      setSource(null);\n    }\n  }, [navigation]);\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator color={colors.misc.loadingIndicator} size=\"large\" />\n        <Text style={[styles.text, styles.loadingText]}>\n          Detecting Object...\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>\n        {navigation === 'Upload' ? 'Upload Files' : 'Detection Result :'}\n      </Text>\n      <View style={styles.contentWrapper}>\n        <View style={styles.leftContainer}>\n          {navigation === 'Upload' ? (\n            <Dropzone\n              bottomNote=\"** File must be in .jpg, .png, .jpeg format\"\n              type=\"image\"\n              containerStyle={{ width: '100%', height: 400 }}\n              source={source}\n              getPreview={setSource}\n            />\n          ) : (\n            <Image\n              source={{ uri: response?.urlOutputs }}\n              style={{\n                width: '100%',\n                height: 400,\n                borderWidth: 2,\n                borderColor: colors.border.primary,\n              }}\n            />\n          )}\n        </View>\n        <View style={styles.rightContainer}>\n          <Text\n            style={[styles.text, styles.fileName]}\n            numberOfLines={2}\n            ellipsizeMode=\"middle\"\n          >\n            {source?.file.name || 'No Files Attached.'}\n          </Text>\n          {navigation === 'Upload' ? (\n            <Button\n              mode=\"secondary\"\n              title=\"Upload\"\n              style={styles.uploadBtn}\n              onPress={onSubmit}\n              disabled={!source}\n            />\n          ) : (\n            <Button\n              title=\"Detect more Istar Object\"\n              style={styles.resultBtn}\n              onPress={navigateToUpload}\n            />\n          )}\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.misc.background,\n    justifyContent: 'center',\n    padding: 50,\n  },\n  header: {\n    textAlign: 'center',\n    fontFamily: 'Montserrat-Bold',\n    color: colors.text.primary,\n    fontSize: fonts.sizes.header,\n    marginBottom: 20,\n  },\n  contentWrapper: {\n    flexDirection: 'row',\n  },\n  leftContainer: {\n    flex: 3,\n  },\n  rightContainer: {\n    justifyContent: 'center',\n    paddingLeft: 20,\n    flex: 1,\n  },\n  text: {\n    fontFamily: 'Montserrat',\n    fontWeight: '600',\n  },\n  fileName: {\n    marginBottom: 20,\n    fontSize: fonts.sizes.medium,\n  },\n  uploadBtn: {\n    width: '70%',\n  },\n  resultBtn: {\n    height: 50,\n  },\n  loadingContainer: { justifyContent: 'center', alignItems: 'center', flex: 1 },\n  loadingText: {\n    textAlign: 'center',\n    color: colors.text.primary,\n    fontSize: fonts.sizes.xLarge,\n    marginTop: 20,\n  },\n});\n","import React from 'react';\n\nimport HomeScene from './scenes/HomeScene';\n\nexport default function App() {\n  return <HomeScene />;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/istar/expo-service-worker.js', { scope: '/istar/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}